{
  "hash": "53be380b2ee4acb21355f15dd0f46f29",
  "result": {
    "markdown": "---\ntitle: \"Two-way randomized complete block design\"\nabstract: \"Two-way ANOVA & pairwise comparison post hoc tests in a randomized complete block design.\"\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# (install &) load packages\npacman::p_load(\n  conflicted,\n  desplot,\n  emmeans,\n  ggtext,\n  MetBrewer,\n  multcomp,\n  multcompView,\n  tidyverse)\n\n# handle function conflicts\nconflict_prefer(\"filter\", \"dplyr\") \nconflict_prefer(\"select\", \"dplyr\")\n```\n:::\n\n\n# Data\n\nThis data is a slightly modified version of a dataset originally published in @gomez_1984 from a yield (kg/ha) trial with 4 genotypes (`G`) and 6 nitrogen levels (`N`), leading to 24 treatment level combinations. The data set here has 3 complete replicates (`rep`) and is laid out as a randomized complete block design (RCBD).\n\n## Import\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n# data is available online:\npath <- \"https://raw.githubusercontent.com/SchmidtPaul/dsfair_quarto/master/data/riceRCBD.csv\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_csv(path) # use path from above\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n# A tibble: 72 × 6\n     row   col rep   N      G     yield\n   <dbl> <dbl> <chr> <chr>  <chr> <dbl>\n 1     2     6 rep1  Goomba Simba  4520\n 2     3     4 rep1  Koopa  Simba  5598\n 3     2     3 rep1  Toad   Simba  6192\n 4     1     1 rep1  Peach  Simba  8542\n 5     2     1 rep1  Diddy  Simba  5806\n 6     3     1 rep1  Yoshi  Simba  7470\n 7     4     5 rep1  Goomba Nala   4034\n 8     4     1 rep1  Koopa  Nala   6682\n 9     3     2 rep1  Toad   Nala   6869\n10     1     2 rep1  Peach  Nala   6318\n# ℹ 62 more rows\n```\n:::\n:::\n\n\n## Format\n\nBefore anything, the columns `rep`, `N` and `G` should be encoded as factors, since R by default encoded them as character.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- dat %>%\n  mutate(across(c(rep, N, G), ~ as.factor(.x)))\n```\n:::\n\n\n## Explore\n\nWe make use of [`dlookr::describe()`](../../misc/usefulthings.qmd#dlookr) to conveniently obtain descriptive summary tables. Here, we get can summarize per nitrogen level, per genotype and also per nitrogen-genotype-combination.\n\n::: columns\n::: {.column width=\"49%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  group_by(N) %>% \n  dlookr::describe(yield) %>% \n  select(2:sd) %>%\n  arrange(desc(mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n# A tibble: 6 × 5\n  N          n    na  mean    sd\n  <fct>  <int> <int> <dbl> <dbl>\n1 Diddy     12     0 5866.  832.\n2 Toad      12     0 5864. 1434.\n3 Yoshi     12     0 5812  2349.\n4 Peach     12     0 5797. 2660.\n5 Koopa     12     0 5478.  657.\n6 Goomba    12     0 4054.  672.\n```\n:::\n\n```{.r .cell-code}\ndat %>% \n  group_by(G) %>% \n  dlookr::describe(yield) %>% \n  select(2:sd) %>%\n  arrange(desc(mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n# A tibble: 4 × 5\n  G         n    na  mean    sd\n  <fct> <int> <int> <dbl> <dbl>\n1 Simba    18     0 6554. 1475.\n2 Nala     18     0 6156. 1078.\n3 Timon    18     0 5563. 1269.\n4 Pumba    18     0 3642. 1434.\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"49%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  group_by(N, G) %>% \n  dlookr::describe(yield) %>% \n  select(2:sd) %>%\n  arrange(desc(mean)) %>% \n  print(n=Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n# A tibble: 24 × 6\n   N      G         n    na  mean     sd\n   <fct>  <fct> <int> <int> <dbl>  <dbl>\n 1 Peach  Simba     3     0 8701.  270. \n 2 Yoshi  Simba     3     0 7563.   86.9\n 3 Yoshi  Nala      3     0 6951.  808. \n 4 Toad   Nala      3     0 6895   166. \n 5 Toad   Simba     3     0 6733.  490. \n 6 Yoshi  Timon     3     0 6687.  496. \n 7 Peach  Nala      3     0 6540.  936. \n 8 Diddy  Simba     3     0 6400   523. \n 9 Diddy  Nala      3     0 6259   499. \n10 Peach  Timon     3     0 6065. 1097. \n11 Toad   Timon     3     0 6014   515. \n12 Diddy  Timon     3     0 5994   101. \n13 Koopa  Nala      3     0 5982   684. \n14 Koopa  Simba     3     0 5672   458. \n15 Koopa  Timon     3     0 5443.  589. \n16 Koopa  Pumba     3     0 4816   506. \n17 Diddy  Pumba     3     0 4812   963. \n18 Goomba Pumba     3     0 4481.  463. \n19 Goomba Nala      3     0 4306   646. \n20 Goomba Simba     3     0 4253.  248. \n21 Toad   Pumba     3     0 3816  1311. \n22 Goomba Timon     3     0 3177.  453. \n23 Yoshi  Pumba     3     0 2047.  703. \n24 Peach  Pumba     3     0 1881.  407. \n```\n:::\n:::\n\n:::\n:::\n\nAdditionally, we can decide to plot our data. One way to deal with the combination of two factors would be to use [panels/facets in ggplot2](https://ggplot2.tidyverse.org/reference/facet_grid.html).\n\nNote that we here define a custom set of colors for the Nitrogen levels that will be used throughout this chapter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNcolors <- met.brewer(\"VanGogh2\", 6) %>% \n  as.vector() %>% \n  set_names(levels(dat$N))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = dat) +\n  aes(y = yield, x = N, color = N) +\n  facet_wrap(~G, labeller = label_both) +\n  stat_summary(\n    fun = mean,\n    colour = \"grey\",\n    geom = \"line\",\n    linetype = \"dotted\",\n    group = 1\n  ) +\n  geom_point() +\n  scale_x_discrete(\n    name = \"Nitrogen\"\n  ) +\n  scale_y_continuous(\n    name = \"Yield\",\n    limits = c(0, NA),\n    expand = expansion(mult = c(0, 0.1))\n  ) +\n  scale_color_manual(\n    values = Ncolors, \n    guide = \"none\"\n  ) +\n  theme_bw() +\n  theme(axis.text.x = element_text(\n    angle = 45,\n    hjust = 1,\n    vjust = 1\n  ))\n```\n\n::: {.cell-output-display}\n![](rcbd_gomezgomez1984_files/figure-html/unnamed-chunk-9-1.png){width=1650}\n:::\n:::\n\n\nFinally, since this is an experiment that was laid with a certain experimental design (= a randomized complete block design; RCBD) - it makes sense to also get a field plan. This can be done via `desplot()` from [{desplot}](../../misc/usefulthings.qmd#desplot).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndesplot(\n  data = dat,\n  form = rep ~ col + row | rep, # fill color per rep, headers per rep\n  col.regions = c(\"white\", \"grey95\", \"grey90\"),\n  text = G, # genotype names per plot\n  cex = 0.8, # genotype names: font size\n  shorten = \"abb\", # genotype names: abbreviate\n  col = N, # color of genotype names for each N-level\n  col.text = Ncolors, # use custom colors from above\n  out1 = col, out1.gpar = list(col = \"darkgrey\"), # lines between columns\n  out2 = row, out2.gpar = list(col = \"darkgrey\"), # lines between rows\n  main = \"Field layout\", # plot title\n  show.key = TRUE, # show legend\n  key.cex = 0.7 # legend font size\n  )\n```\n\n::: {.cell-output-display}\n![](rcbd_gomezgomez1984_files/figure-html/unnamed-chunk-10-1.png){width=1650}\n:::\n:::\n\n\n::: columns\n::: {.column width=\"49%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndesplot(\n  data = dat,\n  form = yield ~ col + row | rep, # fill color per rep, headers per rep\n  text = G, # genotype names per plot\n  cex = 0.8, # genotype names: font size\n  shorten = \"abb\", # genotype names: abbreviate\n  col  = N, # color of genotype names for each N-level\n  col.text = Ncolors, # use custom colors from above\n  out1 = col, out1.gpar = list(col = \"darkgrey\"), # lines between columns\n  out2 = row, out2.gpar = list(col = \"darkgrey\"), # lines between rows\n  main = \"Yield per plot\", # plot title\n  show.key = FALSE, # show legend\n  key.cex = 0.7 # legend font size\n  )\n```\n\n::: {.cell-output-display}\n![](rcbd_gomezgomez1984_files/figure-html/unnamed-chunk-11-1.png){width=1650}\n:::\n:::\n\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"49%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nrepcolors <- c(met.brewer(\"VanGogh3\", 1),\n               met.brewer(\"Hokusai2\", 1),\n               met.brewer(\"OKeeffe2\", 1)) %>%\n  as.vector() %>%\n  set_names(levels(dat$rep))\n\ndesplot(\n  data = dat,\n  form = rep ~ col + row | rep, # fill color per rep, headers per rep\n  col.regions = repcolors,\n  out1 = col, out1.gpar = list(col = \"darkgrey\"), # lines between columns\n  out2 = row, out2.gpar = list(col = \"darkgrey\"), # lines between rows\n  main = \"Experimental design focus\", # plot title\n  show.key = FALSE # don't show legend\n  )\n```\n\n::: {.cell-output-display}\n![](rcbd_gomezgomez1984_files/figure-html/unnamed-chunk-12-1.png){width=1650}\n:::\n:::\n\n:::\n:::\n\n# Model\n\nFinally, we can decide to fit a linear model with yield as the response variable. In this example it makes sense to mentally group the effects in our model as either *design effects* or *treatment effects*. The treatments here are the genotypes `G` and the nitrogen levels `N` which we will include in the model as main effects, but also via their interaction effect `N:G`. Regarding the design, the model needs to contain a block (`rep`) effect.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- lm(\n  yield ~ N + G + N:G + rep,\n  data = dat\n)\n```\n:::\n\n\n:::{.callout-warning collapse=\"true\"}\n## Model assumptions met? (click to show)\n\nIt would be at this moment (i.e. after fitting the model and before running the ANOVA), that you should check whether the model assumptions are met. Find out more in the [summary article \"Model Diagnostics\"](../../summaryarticles/modeldiagnostics.qmd)\n:::\n\n# ANOVA\n\nBased on our model, we can then conduct an ANOVA:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nANOVA <- anova(mod)\nANOVA\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\nAnalysis of Variance Table\n\nResponse: yield\n          Df   Sum Sq  Mean Sq F value    Pr(>F)    \nN          5 30480453  6096091 15.4677 6.509e-09 ***\nG          3 89885035 29961678 76.0221 < 2.2e-16 ***\nrep        2  1084820   542410  1.3763    0.2627    \nN:G       15 69378044  4625203 11.7356 4.472e-11 ***\nResiduals 46 18129432   394118                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nAccordingly, the ANOVA's F-test found the nitrogen-genotype-interaction to be statistically different (p < .001***).\n\n# Mean comparison\n\nBesides an ANOVA, one may also want to compare adjusted yield means between cultivars via post hoc tests (t-test, Tukey test etc.). Especially because of the results of this ANOVA, we should compare means for all `N:G` interactions and **not** for the `N` and/or `G` main effects. When doing so, we still have multiple options to choose from. I here decide to compare all genotype means per nitrogen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_comp <- mod %>% \n  emmeans(specs = ~ N|G) %>% # adj. mean per cultivar\n  cld(Letters = letters) # compact letter display (CLD)\n\nmean_comp\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\nG = Nala:\n N      emmean  SE df lower.CL upper.CL .group\n Goomba   4306 362 46     3576     5036  a    \n Koopa    5982 362 46     5252     6712   b   \n Diddy    6259 362 46     5529     6989   b   \n Peach    6540 362 46     5811     7270   b   \n Toad     6895 362 46     6165     7625   b   \n Yoshi    6951 362 46     6221     7680   b   \n\nG = Pumba:\n N      emmean  SE df lower.CL upper.CL .group\n Peach    1881 362 46     1151     2610  a    \n Yoshi    2047 362 46     1317     2776  a    \n Toad     3816 362 46     3086     4546   b   \n Goomba   4481 362 46     3752     5211   b   \n Diddy    4812 362 46     4082     5542   b   \n Koopa    4816 362 46     4086     5546   b   \n\nG = Simba:\n N      emmean  SE df lower.CL upper.CL .group\n Goomba   4253 362 46     3523     4982  a    \n Koopa    5672 362 46     4942     6402  ab   \n Diddy    6400 362 46     5670     7130   bc  \n Toad     6733 362 46     6003     7462   bc  \n Yoshi    7563 362 46     6834     8293    cd \n Peach    8701 362 46     7971     9430     d \n\nG = Timon:\n N      emmean  SE df lower.CL upper.CL .group\n Goomba   3177 362 46     2448     3907  a    \n Koopa    5443 362 46     4713     6172   b   \n Diddy    5994 362 46     5264     6724   b   \n Toad     6014 362 46     5284     6744   b   \n Peach    6065 362 46     5336     6795   b   \n Yoshi    6687 362 46     5958     7417   b   \n\nResults are averaged over the levels of: rep \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\nNote that if you would like to see the underlying individual contrasts/differences between adjusted means, simply add `details = TRUE` to the `cld()` statement. Furthermore, check out the [Summary Article \"Compact Letter Display\"](../../summaryarticles/compactletterdisplay.qmd).\n\nFinally, we can create a plot that displays both the raw data and the results, *i.e.* the comparisons of the adjusted means that are based on the linear model.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmy_caption <- \"The four facettes represent genotypes Simba, Nala, Timon and Pumba. Black dots represent raw data. Red dots and error bars represent adjusted means with 95% confidence limits per cultivar. For each genotype separately, means followed by a common letter are not significantly different according to the Tukey-test.\"\n\nggplot() +\n  facet_wrap(~G, labeller = label_both) + # facette per G level\n  aes(x = N) +\n  # black dots representing the raw data\n  geom_point(\n    data = dat,\n    aes(y = yield, color = N)\n  ) +\n  # red dots representing the adjusted means\n  geom_point(\n    data = mean_comp,\n    aes(y = emmean),\n    color = \"red\",\n    position = position_nudge(x = 0.2)\n  ) +\n  # red error bars representing the confidence limits of the adjusted means\n  geom_errorbar(\n    data = mean_comp,\n    aes(ymin = lower.CL, ymax = upper.CL),\n    color = \"red\",\n    width = 0.1,\n    position = position_nudge(x = 0.2)\n  ) +\n  # red letters \n  geom_text(\n    data = mean_comp,\n    aes(y = emmean, label = str_trim(.group)),\n    color = \"red\",\n    position = position_nudge(x = 0.35),\n    hjust = 0\n  ) +\n  scale_x_discrete(\n    name = \"Nitrogen\"\n  ) +\n  scale_y_continuous(\n    name = \"Yield\",\n    limits = c(0, NA),\n    expand = expansion(mult = c(0, 0.1))\n  ) +\n  scale_color_manual(\n    values = Ncolors, \n    guide = \"none\"\n  ) +\n  theme_bw() +\n  labs(caption = my_caption) +\n  theme(\n    plot.caption = element_textbox_simple(margin = margin(t = 5)),\n    plot.caption.position = \"plot\",\n    axis.text.x = element_text(\n      angle = 45,\n      hjust = 1,\n      vjust = 1\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](rcbd_gomezgomez1984_files/figure-html/unnamed-chunk-16-1.png){width=1650}\n:::\n:::\n",
    "supporting": [
      "rcbd_gomezgomez1984_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
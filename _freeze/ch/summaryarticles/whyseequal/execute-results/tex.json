{
  "hash": "73815eecb7244a3bf6c29ad0c411c712",
  "result": {
    "markdown": "---\ntitle: \"Why are the StdErr all the same?\"\nabstract: \"Answer to the frequently asked question 'why the standard errors of the means are all the same'\"\n---\n\n::: {.cell}\n\n:::\n\n\n\nI am often asked something along the lines of:\n\n> I found that the Standard Error is always the same. Why is that?\n\n# What is \"always the same\"?\n\nMore precisely, the person refers to the standard errors of the means (SEM) that were obtained based on a linear model[^1]. Here is an example:\n\n[^1]: a.k.a. adjusted means, estimated marginal means (emmeans), least-squares means (lsmeans), modelbased means\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(emmeans)\n\nmod1 <- lm(weight ~ group, data = PlantGrowth) # fit linear model\n  \nemmeans(mod1, specs = \"group\") # get (adjusted) weight means per group\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n group emmean    SE df lower.CL upper.CL\n ctrl    5.03 0.197 27     4.63     5.44\n trt1    4.66 0.197 27     4.26     5.07\n trt2    5.53 0.197 27     5.12     5.93\n\nConfidence level used: 0.95 \n```\n:::\n:::\n\n\n\nIndeed, the values in the `SE` column are all `0.197` and thus identical for all group means.\n\n# Why is this unexpected?\n\nIn my experience, some people find this unexpected because they are used to seeing simple descriptive statistics that are calculated separately per group:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlantGrowth %>%\n  group_by(group) %>%\n  summarise(\n    mean = mean(weight), # arithmetic mean\n    stddev = sd(weight), # standard deviation\n    n = n(), # number of observations\n    stderr = sd(weight) / sqrt(n()) # standard error of the mean\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n# A tibble: 3 x 5\n  group  mean stddev     n stderr\n  <fct> <dbl>  <dbl> <int>  <dbl>\n1 ctrl   5.03  0.583    10  0.184\n2 trt1   4.66  0.794    10  0.251\n3 trt2   5.53  0.443    10  0.140\n```\n:::\n:::\n\n\n\nIndeed, the values in the `stderr` column are not identical but different.\n\n# Why are the latter SEM not identical?\n\nWhen calculating statistical measures like we just did, *i.e.* separately per group, we are treating the data for the different groups as separate samples. Moreover, because calculations are done separately, each group/sample gets its own mean, standard deviation etc. Because of how the standard error of a sample mean is calculated[^2], different standard deviations lead to different standard errors. \n\n[^2]: $SE = SD/\\sqrt(n)$ see *e.g.* [Wikipedia](https://www.wikiwand.com/en/Standard_error#Standard_error_of_the_sample_mean)\n\n# So why are the former SEM identical?\n\nThe key point here is that the former means (=adjusted means[^3]) are not the same thing as the latter means (= simple arithmetic sample means). To obtain adjusted means, we must first fit a simple linear model and by default these models assume homogeneous error variances[^4]. As a consequence, the SEM are also homogeneous/identical (given the experiment is balanced[^5]). \n\n**And that is basically the answer to the question:** Adjusted means on one hand are based on a linear model which has an underlying assumption that the error variance is homogeneous. Calculating arithmetic means separately per group on the other hand automatically leads to separate variances/standard deviations and thus standard errors.\n\n[^3]: a.k.a. adjusted means, estimated marginal means (emmeans), least-squares means (lsmeans), modelbased means\n\n[^4]: a.k.a. Homoscedasticity, Homogeneity of Variance, Assumption of Equal Variance\n\n[^5]: a balanced design has an equal number of observations for all possible level combinations; read more *e.g.* [here](https://www.statisticshowto.com/balanced-and-unbalanced-designs/)\n\n# Which is better?\n\nFirst of all, there is no straight-forward answer to this question. Both are related and each serves a purpose by simply making different assumptions. To really drive this point home, let's fit a not-so-default linear model that actually doesn't assume homogeneous error variances, but instead allows for heterogeneous error variances per group:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nlme)\n\nmod2 <- gls(weight ~ group, # fit linear model\n  weights = varIdent(form =  ~ 1 | group), # one error variance per group\n  data = PlantGrowth)\n\nemmeans(mod2, specs = \"group\") # get (adjusted) weight means per group\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n group emmean    SE   df lower.CL upper.CL\n ctrl    5.03 0.184 9.01     4.61     5.45\n trt1    4.66 0.251 9.00     4.09     5.23\n trt2    5.53 0.140 9.00     5.21     5.84\n\nDegrees-of-freedom method: satterthwaite \nConfidence level used: 0.95 \n```\n:::\n:::\n\n\n\nIndeed, we now find the same three standard errors as for the arithmetic means above. Regarding these two models, it **is** actually possible to determine which one is better *e.g.* by comparing their AIC values - the model with the lowest AIC wins:\n\n::: columns\n::: {.column width=\"49%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n[1] 61.61904\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"49%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n[1] 66.9889\n```\n:::\n:::\n\n\n:::\n:::\n\nSo now we know that for this specific dataset and comparing these two models, the one that assumes a homogeneous error variance is the better choice. Put simply, it is \"better\" because the lower AIC says that the advantage of fitting multiple instead of one error variance does not outweigh the extra effort. We can get a better understanding for this result by actually looking at how the values per group vary (around their mean):\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](whyseequal_files/figure-pdf/unnamed-chunk-7-1.pdf)\n:::\n:::\n\n\n\nSo, yes - the weights seem to display a somewhat consistent amount of variation across the groups. One can imagine a scenario where it would have been different, *e.g.* because the weights of `ctrl` vary much more than those of the other groups. In such a scenario the AIC would have probably claimed a model with heterogeneous error variances per group to be more appropriate.\n\nAs a final note, keep in mind that the example here is very simple. A major advantage of using adjusted means is that the model they are based on can be more complex and *e.g.* include block effects. Arithmetic (sample) means that are calculated as we did for the descriptive statistics - *i.e.* separately per group - do not account for block effects and basically *don't know anything about the weights of the other groups*.\n\n:::{.callout-tip collapse=\"true\"}\n## Additional Resources\n\n-   [stackexchange: Standard error in estimated marginal means are all the same](https://stats.stackexchange.com/questions/444707/standard-error-in-estimated-marginal-means-are-all-the-same) (Note the answer is from the author of [{emmeans}](https://cran.r-project.org/web/packages/emmeans/index.html))\n\n-   [Analyzing designed experiments: Should we report standard deviations or standard errors of the mean or standard errors of the difference or what? (Kozak & Piepho, 2019)](https://www.cambridge.org/core/journals/experimental-agriculture/article/abs/analyzing-designed-experiments-should-we-report-standard-deviations-or-standard-errors-of-the-mean-or-standard-errors-of-the-difference-or-what/92DB0AF151C157B9C6E2FA40F9C9B635)\n\n-   [stackexchange: Interpreting the standard error from emmeans - R](https://stats.stackexchange.com/questions/369532/interpreting-the-standard-error-from-emmeans-r)\n\n-   [IBM: Estimated Marginal Means all have the same standard error in SPSS](https://www.ibm.com/support/pages/estimated-marginal-means-all-have-same-standard-error-spss)\n:::\n",
    "supporting": [
      "whyseequal_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}
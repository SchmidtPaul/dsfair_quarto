{
  "hash": "aca60294772ac1f9f027ad4ab9001f5b",
  "result": {
    "markdown": "---\ntitle: \"Compact Letter Display (CLD)\"\ndate: 2022-10-03\ntbl-cap-location: bottom\n---\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n# What is it?\n\nCompact letter displays are often used to report results of all pairwise comparisons among treatment means in comparative experiments. See Piepho [-@piepho2004] and [-@piepho2018] for more details and find a coding example below.\n\n::: columns\n::: {.column width=\"70%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](compactletterdisplay_files/figure-html/unnamed-chunk-3-1.png){width=1260}\n:::\n:::\n\n:::\n\n::: {.column width=\"30%\"}\n| Group | Mean weight\\* |\n|-------|---------------|\n| Trt1  | 4.7$^{a}$     |\n| Ctrl  | 5.0$^{ab}$    |\n| Trt2  | 5.5$^{b}$     |\n\n: \\*Means not sharing any letter are significantly different by the Tukey-test at the 5% level of significance.\n:::\n:::\n\n# How to\n\n## get the letters\n\nYou will need to install the packages `{emmeans}`, `{multcomp}` and `{multcompView}`. The example given here is based on the `PlantGrowth` data, which is included in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(multcompView)\n\n# set up model\nmodel <- lm(weight ~ group, data = PlantGrowth)\n\n# get (adjusted) weight means per group\nmodel_means <- emmeans(object = model,\n                       specs = \"group\")\n\n# add letters to each mean\nmodel_means_cld <- cld(object = model_means,\n                       adjust = \"Tukey\",\n                       Letters = letters,\n                       alpha = 0.05)\n# show output\nmodel_means_cld\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```{.custom-output}\n group emmean    SE df lower.CL upper.CL .group\n trt1    4.66 0.197 27     4.16     5.16  a    \n ctrl    5.03 0.197 27     4.53     5.53  ab   \n trt2    5.53 0.197 27     5.02     6.03   b   \n\nConfidence level used: 0.95 \nConf-level adjustment: sidak method for 3 estimates \nP value adjustment: tukey method for comparing a family of 3 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping letter,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n1.  **We set up a model**\n    -   This is a very simple example using `lm()`. You may use much more complex models and [many other model classes](https://cran.r-project.org/web/packages/emmeans/vignettes/models.html).\n2.  [**`emmeans()`**](https://www.rdocumentation.org/packages/emmeans/versions/1.6.2-1/topics/emmeans) **estimates adjusted means per group.**\n    -   Note that when doing this for mixed models, one should use the Kenward-Roger method adjusting the denominator degrees of freedom. One may add the `lmer.df = \"kenward-roger\"` argument, yet this is the default in {emmeans} ([Details here](https://cran.r-project.org/web/packages/emmeans/vignettes/sophisticated.html#lmerOpts))! Also note that you cannot go wrong with this adjustment - even if there is nothing to adjust.\n3.  [**`cld()`**](https://www.rdocumentation.org/packages/multcomp/versions/1.4-17/topics/cld) **adds the letters in a new column named `.group`.**\n    -   The `alpha =` argument lets you choose the significance level for the comparisons.\n    -   It allows for [different multiplicity adjustments](https://cran.r-project.org/web/packages/emmeans/vignettes/confidence-intervals.html#adjust). Go to the \"P-value adjustments\" heading within the [\"summary.emmGrid\" section in the emmeans documentation](https://www.rdocumentation.org/packages/emmeans/versions/1.6.2-1/topics/summary.emmGrid) for more details on e.g. t-test, Tukey-test, Bonferroni adjustment etc.\n\n::: callout-note\nIf you get the following note and are irritated by it,\n\n\n::: {.cell code-copy='false'}\n\n```{.r .cell-code  code-fold=\"false\"}\n## Note: adjust = \"tukey\" was changed to \"sidak\" \n## because \"tukey\" is only appropriate for one set of pairwise comparisons\n## Conf-level adjustment: sidak method for 3 estimates.\n## P value adjustment: tukey method for comparing a family of 3 estimates\n```\n:::\n\n\n[here](https://stats.stackexchange.com/questions/508055/unclear-why-adjust-tukey-was-changed-to-sidak) is an answer explaining why this happens and that it is not a problem. It is not a problem in the sense that the p-values of the pairwise comparisons were indeed adjusted with the Tukey-method, while the Sidak adjustment was applied to the confidence intervals of the means (*i.e.* columns `lower.CL` and `upper.CL`).\n:::\n\n## interpret the letters\n\nUntil August 2022, the note below the `cld()` outcome would read:\n\n\n::: {.cell code-copy='false'}\n\n```{.r .cell-code  code-fold=\"false\"}\n## NOTE: Compact letter displays can be misleading\n##       because they show NON-findings rather than findings.\n##       Consider using 'pairs()', 'pwpp()', or 'pwpm()' instead.\n```\n:::\n\n\nHowever, in [CRAN version 1.8.0](https://github.com/rvlenth/emmeans/commits/678c2eac11570e8cb6a5aab05323b28690487481/R/cld-emm.R) it was changed to:\n\n\n::: {.cell code-copy='false'}\n\n```{.r .cell-code  code-fold=\"false\"}\n## NOTE: If two or more means share the same grouping letter,\n##       then we cannot show them to be different.\n##       But we also did not show them to be the same.\n```\n:::\n\n\nBoth notes are very much in line with the delicate matter of how the CLD must be understood. The author and maintainer of the `{emmeans}` package, [Russell V. Lenth](http://homepage.divms.uiowa.edu/~rlenth/) makes the argument that CLDs convey information in a way that may be misleading to the reader. This is because they \"display non-findings rather than findings - they group together means based on NOT being able to show they are different\" (personal communication). Furthermore, \"\\[the CLD approach\\] works, but it is very black-and-white: with alpha = .05, P values slightly above or below .05 make a difference, but there's no difference between a P value of .051 and one of .987, or between .049 and .00001\" ([posted here](https://github.com/rvlenth/emmeans/issues/93#issuecomment-468877941)). He even [wrote here](https://stats.stackexchange.com/a/508092/192956) that \"Providing for CLDs at all remains one of my biggest regrets in developing this package\". Finally, the former note suggests using alternative plots, which are also created below.\n\nOn the other hand, it must be clear that the information conveyed by CLDs is not *wrong* as long as it is interpreted correctly. The [documentation of the `cld()` function](https://www.rdocumentation.org/packages/multcomp/versions/1.4-17/topics/cld) refers to Piepho [-@piepho2004], but even more on point in this context is Piepho [-@piepho2018]:\n\n> [**Piepho, Hans-Peter**](https://www.uni-hohenheim.de/organisation?tx_base_lsfcontentadmin%5BlsfPerson%5D=6257&L=1) **(2018) Letters in Mean Comparisons: What They Do and Don't Mean**, Agronomy Journal, 110(2), 431-434. DOI: [10.2134/agronj2017.10.0580](https://doi.org/10.2134/agronj2017.10.0580) [(ResearchGate)](https://www.researchgate.net/publication/322054734_Letters_in_Mean_Comparisons_What_They_Do_and_Don't_Mean)\n>\n> **Abstract**\n>\n> -   Letter displays allow efficient reporting of pairwise treatment comparisons.\n> -   It is important to correctly convey the meaning of letters in captions to tables and graphs displaying treatment means.\n> -   The meaning of a letter display can and should be stated in a single sentence without ambiguity.\n>\n> Letter displays are often used to report results of all pairwise comparisons among treatment means in comparative experiments. In captions to tables and charts using such letter displays, it is crucial to explain properly what the letters mean. In this paper I explain what the letters mean and how this meaning can be succinctly conveyed in a single sentence without ambiguity. This is contrasted to counter-examples commonly found in publications.\n\nThus, the article (= 4 pages long) is certainly worth a read if you are using CLDs.\n\n## get the plots\n\nHere I provide code for two ways of plotting the results via `{ggplot2}`. The first plot is the one I would use, while the second plot is one that is traditionally more common. Finally, I provide examples of other plots that I came across that are suggested as alternatives to CLD plots.\n\n### plot 1: suggested\n\nI've been using and suggesting to use this type of plot for a while now. I know it contains a lot of information and may seem unfamiliar and overwhelming at first glance. However, I argue that if you take the time to understand what you are looking at, this plot is nice as it shows the raw data (black dots), descriptive statistics (black boxes), estimated means (red dots) and a measure of their precision (red error bars) as well as the compact letter display (red letters).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggtext)    # automatic line breaks in caption\nlibrary(tidyverse) # ggplot & helper functions\nlibrary(scales)    # more helper functions\n\n# optional: sort factor levels of groups column according to highest mean\n# ...in means table\nmodel_means_cld <- model_means_cld %>% \n  mutate(group = fct_reorder(group, emmean))\n# ...in data table\nPlantGrowth <- PlantGrowth %>% \n  mutate(group = fct_relevel(group, levels(model_means_cld$group)))\n\n# plot\nggplot() +\n  # y-axis\n  scale_y_continuous(\n    name = \"Weight\",\n    limits = c(0, NA),\n    breaks = pretty_breaks(),\n    expand = expansion(mult = c(0,0.1))\n  ) +\n  # x-axis\n  scale_x_discrete(\n    name = \"Treatment\"\n  ) +\n  # general layout\n  theme_classic() +\n  theme(plot.caption = element_textbox_simple()) +\n  # black data points\n  geom_point(\n    data = PlantGrowth,\n    aes(y = weight, x = group),\n    shape = 16,\n    alpha = 0.5,\n    position = position_nudge(x = -0.2)\n  ) +\n  # black boxplot\n  geom_boxplot(\n    data = PlantGrowth,\n    aes(y = weight, x = group),\n    width = 0.05,\n    outlier.shape = NA,\n    position = position_nudge(x = -0.1)\n  ) +\n  # red mean value\n  geom_point(\n    data = model_means_cld,\n    aes(y = emmean, x = group),\n    size = 2,\n    color = \"red\"\n  ) +\n  # red mean errorbar\n  geom_errorbar(\n    data = model_means_cld,\n    aes(ymin = lower.CL, ymax = upper.CL, x = group),\n    width = 0.05,\n    color = \"red\"\n  ) +\n  # red letters\n  geom_text(\n    data = model_means_cld,\n    aes(\n      y = emmean,\n      x = group,\n      label = str_trim(.group)\n    ),\n    position = position_nudge(x = 0.1),\n    hjust = 0,\n    color = \"red\"\n  ) +\n  # caption\n  labs(\n    caption = \"Black dots represent raw data. Red dots and error bars represent (estimated marginal) means ± 95% confidence interval per group. Means not sharing any letter are significantly different by the Tukey-test at the 5% level of significance.\"\n  )\n```\n\n::: {.cell-output-display}\n![](compactletterdisplay_files/figure-html/unnamed-chunk-8-1.png){width=1650}\n:::\n:::\n\n\n### plot 2: well-known\n\nTraditionally, bar plots with error bars are used a lot in this context. In my experience, there is at least one poster with one of them in every university building I. While they are not wrong *per se*, there is a decade-long discussion about why such \"dynamite plots\" are not optimal (see e.g. [this nice blogpost](https://www.cedricscherer.com/2021/06/06/visualizing-distributions-with-raincloud-plots-and-how-to-create-them-with-ggplot2/)).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggtext)    # automatic line breaks in caption\nlibrary(tidyverse) # ggplot & helper functions\nlibrary(scales)    # more helper functions\n\n# optional: sort factor levels of groups column according to highest mean\n# ...in means table\nmodel_means_cld <- model_means_cld %>% \n  mutate(group = fct_reorder(group, emmean))\n# ...in data table\nPlantGrowth <- PlantGrowth %>% \n  mutate(group = fct_relevel(group, levels(model_means_cld$group)))\n\n# plot\nggplot() +\n  # y-axis\n  scale_y_continuous(\n    name = \"Weight\",\n    limits = c(0, NA),\n    breaks = pretty_breaks(),\n    expand = expansion(mult = c(0,0.1))\n  ) +\n  # x-axis\n  scale_x_discrete(\n    name = \"Treatment\"\n  ) +\n  # general layout\n  theme_classic() +\n  theme(plot.caption = element_textbox_simple()) +\n  # bars\n  geom_bar(data = model_means_cld,\n           aes(y = emmean, x = group),\n           stat = \"identity\") +\n  # errorbars\n  geom_errorbar(data = model_means_cld,\n                aes(\n                  ymin = emmean - SE,\n                  ymax = emmean + SE,\n                  x = group\n                ),\n                width = 0.1) +\n  # letters\n  geom_text(\n    data = model_means_cld,\n    aes(\n      y = emmean + SE,\n      x = group,\n      label = str_trim(.group)\n    ),\n    hjust = 0.5,\n    vjust = -0.5\n  ) +\n  # caption\n  labs(\n    caption = \"Bars with errorbars represent (estimated marginal) means ± standard error. Means not sharing any letter are significantly different by the Tukey-test at the 5% level of significance.\"\n  )\n```\n\n::: {.cell-output-display}\n![](compactletterdisplay_files/figure-html/unnamed-chunk-9-1.png){width=1650}\n:::\n:::\n\n\n## Alternative plots\n\nNote that I simply collect alternative ways of plotting adjusted mean comparisons here - this does not mean I fully grasp their concept.\n\n### alt 1: Pairwise P-value plot {emmeans}\n\nThis is the Pairwise P-value plot suggested in the former NOTE we received above as an alternative. The documentation reads: *Factor levels (or combinations thereof) are plotted on the vertical scale, and P values are plotted on the horizontal scale. Each P value is plotted twice -- at vertical positions corresponding to the levels being compared -- and connected by a line segment. Thus, it is easy to visualize which P values are small and large, and which levels are compared.*\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npwpp(model_means) + theme_bw()\n```\n\n::: {.cell-output-display}\n![](compactletterdisplay_files/figure-html/unnamed-chunk-10-1.png){width=1650}\n:::\n:::\n\n\n### alt 2: Lighthouse plot {easystats}\n\nWithin the framework of the `{easystats}` packages, the *lighthouse plots* came up as a more recent idea. See [this issue](https://github.com/easystats/see/issues/12) and [this](https://easystats.github.io/see/articles/modelbased.html#pairwise-contrasts) and [this](https://easystats.github.io/modelbased/articles/estimate_contrasts.html#complex-model) part of the documentation for more details.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(modelbased)\nlibrary(see)\nplot(estimate_contrasts(model, adjust = \"tukey\"),\n     estimate_means(model)) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](compactletterdisplay_files/figure-html/unnamed-chunk-11-1.png){width=1650}\n:::\n:::\n\n\n### alt 3: The {ggbetweenstats} plot\n\nFinally, the `{ggstatsplot}` package's function [`ggbetweenstats()`](https://indrajeetpatil.github.io/ggstatsplot/articles/web_only/ggbetweenstats.html) aims to create graphics with details from statistical tests included in the information-rich plots themselves and would compare our groups like this:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(PMCMRplus)\nlibrary(rstantools)\nlibrary(ggstatsplot)\n# \"since the confidence intervals for the effect sizes are computed using\n# bootstrapping, important to set a seed for reproducibility\"\nset.seed(42)\nggstatsplot::ggbetweenstats(\n  data = PlantGrowth,\n  x = group,\n  y = weight,\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"all\",\n  p.adjust.method = \"none\"\n)\n```\n\n::: {.cell-output-display}\n![](compactletterdisplay_files/figure-html/unnamed-chunk-12-1.png){width=1650}\n:::\n:::\n\n\n# TO DO\n\nProvide often used options for coding\n\n-   \\`pairs()\\`\n\n-   \\`adjust = \"none\"\\`\n\n-   \\`details = TRUE\\`\n",
    "supporting": [
      "compactletterdisplay_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
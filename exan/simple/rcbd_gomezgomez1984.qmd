---
title: "Two-way randomized complete block design"
abstract: "Two-way ANOVA & pairwise comparison post hoc tests in a randomized complete block design."
---

```{r}
#| include: false
source(here::here("helpersrc.R"))
```

```{r}
# (install &) load packages
pacman::p_load(
  conflicted,
  desplot,
  emmeans,
  ggtext,
  MetBrewer,
  multcomp,
  multcompView,
  tidyverse)

# handle function conflicts
conflict_prefer("filter", "dplyr") 
conflict_prefer("select", "dplyr")
```

# Data

This data is a slightly modified version of a dataset originally published in @gomez1984 from a yield (kg/ha) trial with 4 genotypes (`G`) and 6 nitrogen levels (`N`), leading to 24 treatment level combinations. The data set here has 3 complete replicates (`rep`) and is laid out as a randomized complete block design (RCBD).

## Import

```{r}
#| echo: false
path <- here::here("data", "riceRCBD.csv")
get_url_from_path(path)
```

```{r}
dat <- read_csv(path) # use path from above
dat
```

## Format

Before anything, the columns `rep`, `N` and `G` should be encoded as factors, since R by default encoded them as character.

```{r}
dat <- dat %>%
  mutate(across(c(rep, N, G), ~ as.factor(.x)))
```

## Explore

We make use of [`dlookr::describe()`](../../summaryarticles/usefulthings.qmd#dlookr) to conveniently obtain descriptive summary tables. Here, we get can summarize per nitrogen level, per genotype and also per nitrogen-genotype-combination.

::: columns
::: {.column width="49%"}
```{r}
dat %>% 
  group_by(N) %>% 
  dlookr::describe(yield) %>% 
  select(2:sd) %>%
  arrange(desc(mean))

dat %>% 
  group_by(G) %>% 
  dlookr::describe(yield) %>% 
  select(2:sd) %>%
  arrange(desc(mean))
```
:::

::: {.column width="2%"}
:::

::: {.column width="49%"}
```{r}
dat %>% 
  group_by(N, G) %>% 
  dlookr::describe(yield) %>% 
  select(2:sd) %>%
  arrange(desc(mean)) %>% 
  print(n=Inf)
```
:::
:::

Additionally, we can decide to plot our data. One way to deal with the combination of two factors would be to use [panels/facets in ggplot2](https://ggplot2.tidyverse.org/reference/facet_grid.html).

Note that we here define a custom set of colors for the Nitrogen levels that will be used throughout this chapter.

```{r}
Ncolors <- met.brewer("VanGogh2", 6) %>% 
  as.vector() %>% 
  set_names(levels(dat$N))
```

```{r}
#| code-fold: true
ggplot(data = dat) +
  aes(y = yield, x = N, color = N) +
  facet_wrap(~G, labeller = label_both) +
  stat_summary(
    fun = mean,
    colour = "grey",
    geom = "line",
    linetype = "dotted",
    group = 1
  ) +
  geom_point() +
  scale_x_discrete(
    name = "Nitrogen"
  ) +
  scale_y_continuous(
    name = "Yield",
    limits = c(0, NA),
    expand = expansion(mult = c(0, 0.1))
  ) +
  scale_color_manual(
    values = Ncolors, 
    guide = "none"
  ) +
  theme_bw() +
  theme(axis.text.x = element_text(
    angle = 45,
    hjust = 1,
    vjust = 1
  ))
```

Finally, since this is an experiment that was laid with a certain experimental design (= a randomized complete block design; RCBD) - it makes sense to also get a field plan. This can be done via `desplot()` from [{desplot}](../../summaryarticles/usefulthings.qmd#desplot).

```{r}
#| code-fold: true
desplot(
  data = dat,
  form = rep ~ col + row | rep, # fill color per rep, headers per rep
  col.regions = c("white", "grey95", "grey90"),
  text = G, # genotype names per plot
  cex = 1, # genotype names: font size
  shorten = "abb", # genotype names: abbreviate
  col = N, # color of genotype names for each N-level
  col.text = Ncolors, # use custom colors from above
  out1 = col, out1.gpar = list(col = "darkgrey"), # lines between columns
  out2 = row, out2.gpar = list(col = "darkgrey"), # lines between rows
  main = "Field layout", # plot title
  show.key = TRUE, # show legend
  key.cex = 0.7 # legend font size
  )
```

::: columns
::: {.column width="49%"}
```{r}
#| code-fold: true
desplot(
  data = dat,
  form = yield ~ col + row | rep, # fill color per rep, headers per rep
  text = G, # genotype names per plot
  cex = 1, # genotype names: font size
  shorten = "abb", # genotype names: abbreviate
  col  = N, # color of genotype names for each N-level
  col.text = Ncolors, # use custom colors from above
  out1 = col, out1.gpar = list(col = "darkgrey"), # lines between columns
  out2 = row, out2.gpar = list(col = "darkgrey"), # lines between rows
  main = "Yield per plot", # plot title
  show.key = TRUE, # show legend
  key.cex = 0.7 # legend font size
  )
```
:::

::: {.column width="2%"}
:::

::: {.column width="49%"}
```{r}
#| code-fold: true
repcolors <- c(met.brewer("VanGogh3", 1),
               met.brewer("Hokusai2", 1),
               met.brewer("OKeeffe2", 1)) %>%
  as.vector() %>%
  set_names(levels(dat$rep))

desplot(
  data = dat,
  form = rep ~ col + row | rep, # fill color per rep, headers per rep
  col.regions = repcolors,
  out1 = col, out1.gpar = list(col = "darkgrey"), # lines between columns
  out2 = row, out2.gpar = list(col = "darkgrey"), # lines between rows
  main = "Experimental design focus", # plot title
  show.key = FALSE # don't show legend
  )
```
:::
:::

# Model

Finally, we can decide to fit a linear model with yield as the response variable. In this example it makes sense to mentally group the effects in our model as either *design effects* or *treatment effects*. The treatments here are the genotypes `G` and the nitrogen levels `N` which we will include in the model as main effects, but also via their interaction effect `N:G`. Regarding the design, the model needs to contain a block (`rep`) effect.

```{r}
mod <- lm(
  yield ~ N + G + N:G + rep,
  data = dat
)
```

::: custom-callout-modass
It would be at this moment (i.e. after fitting the model and before running the ANOVA), that you should check whether the model assumptions are met. Find out more in the [summary article "Model Diagnostics"](../../summaryarticles/modeldiagnostics.qmd)
:::

# ANOVA

Based on our model, we can then conduct an ANOVA:

```{r}
ANOVA <- anova(mod)
ANOVA
```

Accordingly, the ANOVA's F-test found the nitrogen-genotype-interaction to be statistically different (`r getp(ANOVA, "N:G")`).

# Mean comparison

Besides an ANOVA, one may also want to compare adjusted yield means between cultivars via post hoc tests (t-test, Tukey test etc.). Especially because of the results of this ANOVA, we should compare means for all `N:G` interactions and **not** for the `N` and/or `G` main effects. When doing so, we still have multiple options to choose from. I here decide to compare all genotype means per nitrogen

```{r}
mean_comp <- mod %>% 
  emmeans(specs = ~ N|G) %>% # adj. mean per cultivar
  cld(Letters = letters) # compact letter display (CLD)

mean_comp
```

Note that if you would like to see the underlying individual contrasts/differences between adjusted means, simply add `details = TRUE` to the `cld()` statement. Furthermore, check out the [Summary Article "Compact Letter Display"](../../summaryarticles/compactletterdisplay.qmd).

Finally, we can create a plot that displays both the raw data and the results, *i.e.* the comparisons of the adjusted means that are based on the linear model.

```{r}
#| code-fold: true
#| fig-height: 4

my_caption <- "The four facettes represent genotypes A, B, C and D. Black dots represent raw data. Red dots and error bars represent adjusted means with 95% confidence limits per cultivar. For each genotype separately, means followed by a common letter are not significantly different according to the Tukey-test."

ggplot() +
  facet_wrap(~G, labeller = label_both) + # facette per G level
  aes(x = N) +
  # black dots representing the raw data
  geom_point(
    data = dat,
    aes(y = yield, color = N)
  ) +
  # red dots representing the adjusted means
  geom_point(
    data = mean_comp,
    aes(y = emmean),
    color = "red",
    position = position_nudge(x = 0.2)
  ) +
  # red error bars representing the confidence limits of the adjusted means
  geom_errorbar(
    data = mean_comp,
    aes(ymin = lower.CL, ymax = upper.CL),
    color = "red",
    width = 0.1,
    position = position_nudge(x = 0.2)
  ) +
  # red letters 
  geom_text(
    data = mean_comp,
    aes(y = emmean, label = str_trim(.group)),
    color = "red",
    position = position_nudge(x = 0.35),
    hjust = 0
  ) +
  scale_x_discrete(
    name = "Nitrogen"
  ) +
  scale_y_continuous(
    name = "Yield",
    limits = c(0, NA),
    expand = expansion(mult = c(0, 0.1))
  ) +
  scale_color_manual(
    values = Ncolors, 
    guide = "none"
  ) +
  theme_bw() +
  labs(caption = my_caption) +
  theme(
    plot.caption = element_textbox_simple(margin = margin(t = 5)),
    plot.caption.position = "plot",
    axis.text.x = element_text(
      angle = 45,
      hjust = 1,
      vjust = 1
    )
  )
```
